{"version":3,"sources":["store/events/event.types.js","store/events/event.action.js","util/api.call.js","store/events/event.sagas.js","store/events/event.reducer.js","store/store.js","components/custum-components/form-input/form-input.component.jsx","components/custum-components/CustumButon/custumButton.component.jsx","components/new-event-form/new-event-forms.component.jsx","components/events/events.component.jsx","components/custum-components/custum-select/custumSelect.component.jsx","store/events/event.selector.js","components/events-container/events-container.component.jsx","util/filter.utils.js","components/custum-components/spinner/spinner.component.jsx","components/accordion/accordion.component.jsx","App.js","index.js"],"names":["EVENTS_TYPES","START_FETCHING_ALL_EVENTS","SUCCESS_FETCHING_ALL_EVENTS","FAILURE_FETCHING_ALL_EVENTS","START_ADD_NEW_EVENTS","SUCCESS_ADD_NEW_EVENTS","FAILURE_ADD_NEW_EVENTS","startFetchingAllEvents","type","successFetchingAllEvents","allEvents","payload","failFetchingAllEvents","failAddingNewEvents","serverUrl","postRequest","endpoint","axios","post","getAllEvents","addNewEvent","startFetchingEvents","startAddingNewEvent","eventSaga","get","console","log","put","data","takeLatest","all","call","ADMIN_INITIAL_STATE","isLoading","isEventFetchError","hasPostEventStarted","hasPostEventSuccess","hasPostEventError","adminReducer","state","action","rootSaga","sagaMiddelware","createSagaMiddelware","middleware","rootReducer","combineReducers","events","eventReducer","store","createStore","applyMiddleware","run","FormInput","handleChange","isError","label","otherProps","className","onChange","value","length","style","color","CustumButton","children","disabled","otherprops","AddNewEventForm","props","handleSubmit","event","preventDefault","eventData","eventName","venue","price","description","discount","startAddingNewEvents","error","handleChnage","target","name","validity","validateForm","setState","resetForm","hasEventNameError","hasDescriptionError","hasVenueError","hasPriceError","hasDiscountError","eventNameErrorMsg","descriptionErrorMsg","venueErrorMsg","priceErrorMsg","discountErrorMsg","valid","errorMsg","this","onSubmit","required","onBlur","targetvalue","min","max","onClick","React","Component","connect","dispatch","CustumEvent","Description","Discount","Event_Name","Price","Venue","CustumSelect","id","options","defaultValue","map","option","index","selectEvents","selectLoadingState","createSelector","selectAllEvents","EventContainer","filterOptions","handelFilterChangeEvent","filteredEventArray","filter","eachEventData","getAllDiscountEvents","getAllZeroDiscountEvents","eventsToDisplay","eachEvents","Spinner","useEffect","Accordion","AccordionSummary","expandIcon","aria-controls","AccordionDetails","defaultExpanded","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b615352b.chunk.js","sourcesContent":["const EVENTS_TYPES={\r\n        START_FETCHING_ALL_EVENTS:      'START_FETCHING_ALL_EVENTS',\r\n        SUCCESS_FETCHING_ALL_EVENTS:    'SSUCCESS_FETCHING_ALL_EVENTS',\r\n        FAILURE_FETCHING_ALL_EVENTS:    'FAILURE_FETCHING_ALL_EVENTS',\r\n        START_ADD_NEW_EVENTS:      'START_ADD_NEW_EVENTS',\r\n        SUCCESS_ADD_NEW_EVENTS:    'SUCCESS_ADD_NEW_EVENTS',\r\n        FAILURE_ADD_NEW_EVENTS:    'FAILURE_ADD_NEW_EVENTS',\r\n}\r\n\r\nexport default EVENTS_TYPES;","import EVENTS_TYPES from './event.types';\r\n\r\n// event fetching action creator\r\nexport const startFetchingAllEvents =()=>{\r\n    return{\r\n        type:EVENTS_TYPES.START_FETCHING_ALL_EVENTS,\r\n    }\r\n}\r\n\r\nexport const successFetchingAllEvents=(allEvents)=>{\r\n    return{\r\n        type:EVENTS_TYPES.SUCCESS_FETCHING_ALL_EVENTS,\r\n        payload: allEvents\r\n    }\r\n}\r\n\r\nexport const failFetchingAllEvents =()=>{\r\n    return{\r\n        type:EVENTS_TYPES.FAILURE_FETCHING_ALL_EVENTS,\r\n    }\r\n}\r\n\r\n// new event action creator\r\nexport const startAddingNewEvent =(newEventData)=>{\r\n    return{\r\n        type:EVENTS_TYPES.START_ADD_NEW_EVENTS,\r\n        payload:newEventData\r\n    }\r\n}\r\n\r\nexport const successAddingNewEvents =()=>{\r\n    return{\r\n        type:EVENTS_TYPES.SUCCESS_ADD_NEW_EVENTS,\r\n    }\r\n}\r\n\r\nexport const failAddingNewEvents =()=>{\r\n    return{\r\n        type:EVENTS_TYPES.FAILURE_ADD_NEW_EVENTS,\r\n    }\r\n}\r\n\r\n\r\n","import axios from 'axios';\r\n\r\n//const serverUrl ='http://localhost:5000';\r\nconst serverUrl =  'https://database2021.herokuapp.com';\r\n\r\n\r\nexport const getRequest =(endpoint)=>{ // '/events'\r\n    return axios.get(serverUrl+endpoint)\r\n}\r\n\r\nexport const postRequest =(endpoint, payload)=>{\r\n    return axios.post(serverUrl+endpoint, {...payload})\r\n}\r\n\r\nexport const deleteRequest =(endpoint, idForDeleteItem )=>{\r\n    return axios.delete(serverUrl+endpoint+'/'+idForDeleteItem)\r\n}\r\nexport const updateRequest =(endpoint, payload)=>{\r\n    return axios.put(serverUrl+endpoint,{...payload})\r\n}","import {takeLatest, put,all,call} from 'redux-saga/effects';\r\nimport EVENTS_TYPES from './event.types';\r\nimport {\r\n    startFetchingAllEvents,\r\n    successFetchingAllEvents,\r\n    failFetchingAllEvents,\r\n    successAddingNewEvents,\r\n    failAddingNewEvents\r\n\r\n} from './event.action'\r\n\r\nimport {getRequest,postRequest} from '../../util/api.call';\r\n\r\n// get all the passengers\r\nfunction * getAllEvents(){\r\n  try {   \r\n    const allEvents= yield getRequest('/events');\r\n    console.log('allEvents', allEvents);\r\n    yield put(successFetchingAllEvents(allEvents.data));\r\n    }\r\n    catch(error){\r\n        yield put(failFetchingAllEvents)\r\n    }\r\n}\r\n// delete a passenger\r\nfunction * addNewEvent({payload}){\r\n    console.log('new event data to be entered is',payload)\r\n    try{\r\n        yield postRequest(`/events`,payload);\r\n        yield put(successAddingNewEvents());\r\n        yield put(startFetchingAllEvents());\r\n     } catch(error){\r\n         yield put(failAddingNewEvents)\r\n     }\r\n\r\n}\r\n\r\nfunction* startFetchingEvents(){\r\n    yield takeLatest(EVENTS_TYPES.START_FETCHING_ALL_EVENTS, getAllEvents)\r\n}\r\nfunction* startAddingNewEvent(){\r\n    yield takeLatest(EVENTS_TYPES.START_ADD_NEW_EVENTS, addNewEvent)\r\n}\r\n\r\nexport default function *eventSaga(){\r\n        yield all(\r\n            [\r\n                call(startFetchingEvents),\r\n                call(startAddingNewEvent)\r\n            ]\r\n        )\r\n}","import EVENTS_TYPES from './event.types'\r\n\r\nconst ADMIN_INITIAL_STATE={\r\n        isLoading             : false,\r\n        isEventFetchError     : false,\r\n        allEvents             : null,\r\n        hasPostEventStarted   : false,\r\n        hasPostEventSuccess   : false,\r\n        hasPostEventError     : false         \r\n}\r\n\r\nconst adminReducer = (state=ADMIN_INITIAL_STATE,action)=>{\r\n    switch(action.type){\r\n        case EVENTS_TYPES.START_ADD_NEW_EVENTS:\r\n        case EVENTS_TYPES.START_FETCHING_ALL_EVENTS:\r\n            return{\r\n                ...state,\r\n                isLoading: true,\r\n                isEventFetchError: false,\r\n                hasPostEventError: false\r\n            }\r\n        case EVENTS_TYPES.SUCCESS_FETCHING_ALL_EVENTS:\r\n            return{\r\n                ...state,\r\n                isLoading        : false,\r\n                isEventFetchError: false,\r\n                allEvents: action.payload\r\n            }\r\n        case EVENTS_TYPES.SUCCESS_ADD_NEW_EVENTS:\r\n            return{\r\n                ...state,\r\n                isLoading        : false,\r\n                hasPostEventError: false,\r\n                hasPostEventSuccess: true\r\n            }\r\n            case EVENTS_TYPES.FAILURE_FETCHING_ALL_EVENTS:\r\n                return{\r\n                    ...state,\r\n                    isLoading        : false,\r\n                    isEventFetchError: false,\r\n                    allEvents: []\r\n                }\r\n                case EVENTS_TYPES.FAILURE_ADD_NEW_EVENTS:\r\n                    return{\r\n                        ...state,\r\n                        isLoading           : false,\r\n                        hasPostEventError   : true,\r\n                        hasPostEventSuccess : false\r\n                    } \r\n        default:\r\n            return state\r\n    }\r\n\r\n}\r\n\r\nexport default adminReducer;","import {createStore,applyMiddleware,combineReducers} from 'redux';\r\nimport { call} from 'redux-saga/effects';\r\n\r\nimport logger from 'redux-logger';\r\n\r\nimport createSagaMiddelware from 'redux-saga';\r\n\r\nimport eventSaga from './events/event.sagas';\r\nimport eventReducer from './events/event.reducer'\r\n\r\n\r\n\r\nconst sagaMiddelware = createSagaMiddelware();\r\nconst middleware=[sagaMiddelware];\r\nif(process.env.NODE_ENV ===\"development\"){  middleware.push(logger);}\r\n\r\n\r\n function* rootSaga(){\r\n    yield call(eventSaga);\r\n}\r\n\r\n\r\nconst rootReducer = combineReducers({events: eventReducer })\r\nconst store = createStore(rootReducer, applyMiddleware(...middleware));\r\n\r\nsagaMiddelware.run(rootSaga);\r\n\r\n\r\nexport default store;\r\n\r\n\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport './form-input.styles.scss'\r\n\r\nconst FormInput = ({handleChange,isError,label,...otherProps})=>{\r\nreturn (\r\n        <div className ='group'>  \r\n            <input className={isError?'form-input error':'form-input'  }\r\n                   onChange={handleChange} \r\n                   {...otherProps}\r\n            />\r\n            <label className = {otherProps.value.length? 'shrink form-input-label':'form-input-label'}\r\n               style={isError?{color: 'red'}:null}\r\n            >\r\n                {label}\r\n            </label> \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FormInput;\r\n\r\n","import React from 'react'\r\nimport './custumButton.styles.scss'\r\n\r\n// {children,...otherprops}\r\nconst CustumButton =({children,disabled,...otherprops})=>{\r\n    return(\r\n            <button {...otherprops} disabled={disabled}\r\n                className ={disabled?'disabled-button custom-button': 'custom-button'}\r\n            >{children}</button>\r\n    )\r\n}\r\n\r\nexport default CustumButton\r\n","import React from 'react';\r\nimport './new-event-forms.styles.scss';\r\n\r\nimport FormInput from '../custum-components/form-input/form-input.component';\r\nimport CustumButton from '../custum-components/CustumButon/custumButton.component';\r\n\r\nimport {connect} from 'react-redux';\r\n\r\nimport {startAddingNewEvent} from '../../store/events/event.action';\r\n\r\n\r\nclass AddNewEventForm extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            eventName: '',\r\n            description: '',\r\n            venue: '',\r\n            price: '',\r\n            discount: '',\r\n            hasEventNameError: false,\r\n            hasDescriptionError: false,\r\n            hasVenueError: false,\r\n            hasPriceError: false,\r\n            hasDiscountError: false,\r\n            eventNameErrorMsg: '',\r\n            descriptionErrorMsg: '',\r\n            venueErrorMsg: '',\r\n            priceErrorMsg: '',\r\n            discountErrorMsg: '',\r\n        }\r\n    }\r\n    handleSubmit=(event)=>{\r\n        event.preventDefault();\r\n        let eventData = {\r\n            \"id\":  this.state.eventName + this.state.venue +this.state.price,\r\n            \"Description\"   : this.state.description,\r\n            \"Discount\"      : this.state.discount, \r\n            \"Event_Name\"    : this.state.eventName,\r\n            \"Price\"         : this.state.price,\r\n            \"Venue\"         : this.state.venue\r\n        }\r\n        console.log('event Data is',eventData);\r\n        try{\r\n           // postRequest('/events', eventData)\r\n           this.props.startAddingNewEvents(eventData);\r\n        } catch(error){\r\n            console.log('error in post request')\r\n        }\r\n     \r\n    }\r\n    handleChnage=(event)=>{ \r\n            const{name,value, validity} = event.target;\r\n            this.validateForm( name,value,validity);\r\n            this.setState({[`${name}`]: value})\r\n    }\r\n    resetForm = ()=>{\r\n        this.setState({\r\n            eventName: '',\r\n            description: '',\r\n            venue: '',\r\n            price: '',\r\n            discount: '',\r\n            hasEventNameError: false,\r\n            hasDescriptionError: false,\r\n            hasVenueError: false,\r\n            hasPriceError: false,\r\n            hasDiscountError: false,\r\n            eventNameErrorMsg: '',\r\n            descriptionErrorMsg: '',\r\n            venueErrorMsg: '',\r\n            priceErrorMsg: '',\r\n            discountErrorMsg: '',\r\n        })\r\n    }\r\n    validateForm=(name, value,validity)=>{\r\n       if(name ==='eventName'){\r\n           if(!validity.valid){\r\n                this.setState({hasEventNameError: true, eventNameErrorMsg:'Event name cannot be Empty'});\r\n            }else{\r\n                this.setState({hasEventNameError: false, eventNameErrorMsg:''});\r\n            }\r\n         }\r\n       if(name === 'description'){\r\n            if(!validity.valid){\r\n                this.setState({hasDescriptionError: true, descriptionErrorMsg:'Description cannot be Empty'});\r\n            }else{\r\n                this.setState({hasDescriptionError: false, descriptionErrorMsg:''});\r\n            }\r\n       }\r\n       if(name === 'venue'){\r\n            if(!validity.valid){\r\n                this.setState({hasVenueError: true, venueErrorMsg:'Venue cannot be Empty'});\r\n            }else{\r\n                this.setState({hasVenueError: false, venueErrorMsg:''});\r\n            }\r\n       }\r\n       if(name === 'price'){\r\n                if(!validity.valid){\r\n                let errorMsg= 'price is mandatory and cannot be less than one';\r\n                this.setState({hasPriceError: true, priceErrorMsg:errorMsg});\r\n                }else{\r\n                this.setState({hasPriceError: false, priceErrorMsg:''});\r\n                }\r\n       }\r\n       if(name === 'discount'){\r\n            let errorMsg= 'discount percentage cannot be empty';\r\n            if(value<0){\r\n                errorMsg = 'discount percentage cannot be less than zero';\r\n            }\r\n            if(value>100){\r\n                errorMsg = 'discount percentage cannot be greater than 100';\r\n            }\r\n            if(!validity.valid){\r\n                this.setState({hasDiscountError: true,discountErrorMsg:errorMsg});\r\n            }else{\r\n                this.setState({hasDiscountError: false, discountErrorMsg:''});\r\n            }\r\n       }\r\n    }\r\n    render(){\r\n        const {eventName,description,venue,price,discount,hasDiscountError,hasEventNameError,\r\n             hasDescriptionError,hasVenueError,hasPriceError,priceErrorMsg, discountErrorMsg,\r\n             eventNameErrorMsg,descriptionErrorMsg,venueErrorMsg\r\n            } = this.state;\r\n        return(\r\n            <div className ='form-container'>\r\n                    <form className = 'add-new-event-form'onSubmit={this.handleSubmit}> \r\n                            <FormInput \r\n                                type='text' \r\n                                isError={hasEventNameError}\r\n                                name='eventName' \r\n                                label='Event Name'\r\n                                value={eventName} \r\n                                required\r\n                                onBlur={(event)=>{this.validateForm(event.target.name,event.targetvalue,event.target.validity)} }  \r\n                                handleChange={this.handleChnage} />\r\n                                {hasEventNameError&&<span className='errorMessage'>{eventNameErrorMsg}</span>}\r\n\r\n                            <FormInput\r\n                                    type='text'\r\n                                    name='description'\r\n                                    label='Event Description'\r\n                                    value={description}\r\n                                    isError={hasDescriptionError} \r\n                                    required\r\n                                    onBlur={(event)=>{this.validateForm(event.target.name,event.targetvalue,event.target.validity)} }\r\n                                    handleChange ={this.handleChnage}/>\r\n                                     {hasDescriptionError&&<span className='errorMessage'>{descriptionErrorMsg}</span>}\r\n\r\n                            <FormInput\r\n                                    type='text'\r\n                                    name='venue'\r\n                                    label='Event Venue'\r\n                                    value={venue} \r\n                                    isError={hasVenueError}\r\n                                    required\r\n                                    onBlur={(event)=>{this.validateForm(event.target.name,event.targetvalue,event.target.validity)} }  \r\n                                    handleChange ={this.handleChnage}/>\r\n                                    {hasVenueError&&<span className='errorMessage'>{venueErrorMsg}</span>}\r\n                                \r\n                            <FormInput\r\n                                    type='number'\r\n                                    name='price'\r\n                                    label='Price'\r\n                                    min=\"1\" \r\n                                    value={price} \r\n                                    isError={hasPriceError}\r\n                                    required\r\n                                    onBlur={(event)=>{this.validateForm(event.target.name,event.targetvalue,event.target.validity)} }  \r\n                                    handleChange ={this.handleChnage}/>\r\n                                    {hasPriceError&&<span className='errorMessage'>{priceErrorMsg}</span>}\r\n\r\n                            <FormInput\r\n                                    type='number'\r\n                                    name='discount'\r\n                                    label='Discount Percentage'\r\n                                    value={discount} \r\n                                    isError={hasDiscountError}\r\n                                    min=\"0\" \r\n                                    max=\"100\"\r\n                                    required\r\n                                    onBlur={(event)=>{this.validateForm(event.target.name,event.targetvalue,event.target.validity)} }  \r\n                                    handleChange ={this.handleChnage}/>  \r\n                                    {hasDiscountError&&<span className='errorMessage'>{discountErrorMsg}</span>}  \r\n                <div className='form-button'>\r\n                    <CustumButton type ='submit'>Add New Event </CustumButton>\r\n                    <CustumButton  type ='button' onClick={this.resetForm}>Reset</CustumButton>\r\n                </div>\r\n        </form> \r\n    </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\n\r\nconst mapDispatchToprops =dispatch=>{\r\n    return{\r\n        startAddingNewEvents: (eventData)=>dispatch(startAddingNewEvent(eventData))\r\n    }\r\n}\r\n\r\nexport default connect(null,mapDispatchToprops)(AddNewEventForm);\r\n","import React from 'react';\r\nimport './events.styles.scss';\r\nclass CustumEvent extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            allEvents: []\r\n        }\r\n    }\r\n    render(){\r\n        const{Description,Discount, Event_Name, Price,Venue} = this.props.eventData;\r\n        return(\r\n        <div className='each-event-container'>\r\n                <div className='event-item'> <span>Event Name</span>           <span>{Event_Name}</span> </div>\r\n                <div className='event-item'> <span>Event Description</span>    <span> {Description} </span> </div>\r\n                <div className='event-item'> <span>Event Venue</span>          <span> {Venue} </span> </div>\r\n                <div className='event-item'> <span>Event Price</span>          <span> {Price} </span> </div>\r\n                <div className='event-item'> <span>Event Discount</span>       <span>{Discount} % </span>  </div>\r\n\r\n        </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default CustumEvent;","import React from 'react';\r\nimport './custumSelect.styles.scss'\r\n\r\n/**\r\n * this will recive \r\n * @name- name of the select\r\n * @id - represnts id\r\n * @options will be array of object conatins [{value: 'car1'}]\r\n * @editable - flag whether to display string or select\r\n * @string - string element to display if not editable\r\n * @defaultValue - defualt value to be selected\r\n *  */ \r\n\r\n// console.log('Display Value',name, id, options , defaultValue );\r\nconst CustumSelect =({name, id, options , defaultValue, handleChange})=>{\r\n        return(\r\n                <select className=\"select-css\" \r\n                        name={name} \r\n                        id={id} \r\n                        key={id}\r\n                        defaultValue={defaultValue}  \r\n                        onChange={(event)=>handleChange(event.target.value)}>\r\n                 {\r\n                    options.map((option,index)=>        \r\n                        <option key= {index+id} \r\n                                value={option.value}\r\n                                >{option.value}</option>)\r\n                 }  \r\n                </select>\r\n            )\r\n        }\r\n    \r\nexport default CustumSelect;\r\n\r\n","import {createSelector} from 'reselect';\r\n\r\n\r\nexport const selectEvents =store=> store.events;\r\n\r\nexport const selectLoadingState = createSelector([selectEvents], events=>events.isLoading)\r\n\r\nexport const selectEventFetchedError = createSelector([selectEvents], events=>events.isEventFetchError)\r\n\r\nexport const selectAllEvents =  createSelector([selectEvents], events=> events.allEvents === null? []: events.allEvents );\r\n\r\n\r\nexport const selectHasPostEventStarted  =  createSelector([selectEvents], events=>events.hasPostEventStarted);\r\n\r\n\r\nexport const selectHasPostEventSuccess  =  createSelector([selectEvents], events=>events.hasPostEventSuccess);\r\n\r\n\r\nexport const selectHasPostEventError    =  createSelector([selectEvents], events=>events.hasPostEventError);\r\n\r\n\r\n","import React from 'react';\r\nimport './events-container.styles.scss';\r\nimport {connect} from 'react-redux';\r\n\r\nimport CustumEvent from '../events/events.component';\r\nimport CustumSelect from '../custum-components/custum-select/custumSelect.component';\r\nimport {getAllFreeEvents, getAllDiscountEvents, getAllZeroDiscountEvents} from '../../util/filter.utils';\r\n\r\nimport {selectAllEvents} from '../../store/events/event.selector';\r\n\r\n\r\nclass EventContainer extends React.Component{\r\n    filterOptions = [{value: 'ALL' },{value: 'Free'},{value:'Discount'},{value:'No Discount'}];\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            allEvents: [],\r\n            eventsToDisplay: []\r\n        }\r\n    }\r\n    componentDidMount(){\r\n           this.setState({allEvents: this.props.allEvents, eventsToDisplay:this.props.allEvents})\r\n    }\r\n    handelFilterChangeEvent = value => {\r\n        let filteredEventArray =[];\r\n        if(value === 'ALL'){            filteredEventArray  = this.state.allEvents; }\r\n        if(value === 'Free'){           filteredEventArray  = getAllFreeEvents(this.state.allEvents); }\r\n        if(value ==='Discount'){        filteredEventArray  = getAllDiscountEvents(this.state.allEvents);}\r\n        if(value ==='No Discount'){     filteredEventArray  = getAllZeroDiscountEvents(this.state.allEvents); }\r\n        this.setState({eventsToDisplay: filteredEventArray})\r\n\r\n    }\r\n    render(){\r\n        return(\r\n            <div className='filter-event-container'> \r\n            <div>\r\n                Filter By: &nbsp;&nbsp;\r\n                <CustumSelect name='filter' id='filter'options={this.filterOptions} \r\n                              defaultValue='ALL' handleChange={this.handelFilterChangeEvent}/>\r\n                \r\n            </div>\r\n            {\r\n                this.state.eventsToDisplay.length === 0? \r\n                <div className='no-events'>No events found</div>: \r\n                <div className='event-container'>\r\n                            {this.state.eventsToDisplay.map((eachEvents,index) =>{\r\n                                return  <CustumEvent key={index} eventData= {eachEvents}/>\r\n                            })}\r\n                </div>\r\n            }\r\n        </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStatToProps =(state)=>{\r\n    return{\r\n            allEvents: selectAllEvents(state)\r\n    }\r\n}\r\nexport default connect(mapStatToProps)(EventContainer);\r\n\r\n\r\n","export const getAllFreeEvents= eventData =>{\r\n    let resultEventsData = \r\n    eventData.filter(eachEventData =>  eachEventData.Discount === '100');\r\n    return resultEventsData;\r\n}\r\n\r\nexport const getAllZeroDiscountEvents= eventData =>{\r\n    let resultEventsData = \r\n    eventData.filter(eachEventData =>  eachEventData.Discount === '0');\r\n    return resultEventsData;\r\n}\r\n\r\nexport const getAllDiscountEvents= eventData =>{\r\n    let resultEventsData = \r\n    eventData.filter(eachEventData =>  eachEventData.Discount !== '0');\r\n    return resultEventsData;\r\n}","import React, { Fragment } from'react';\r\n\r\nimport './spinner.styles.scss';\r\n\r\nconst Spinner = ()=>{\r\n    return(\r\n        <Fragment>\r\n        <div className ='spinnercontainer'>\r\n                            <div className = 'spinnerOverlay'/>\r\n        </div>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default Spinner","import React, {useEffect}from 'react';\r\nimport Accordion from '@material-ui/core/Accordion';\r\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\r\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport './accordion.styles.scss';\r\nimport AddNewEventForm from '../new-event-form/new-event-forms.component'\r\nimport EventContainer from '../events-container/events-container.component'\r\nimport Spinner from '../custum-components/spinner/spinner.component'\r\nimport {connect} from 'react-redux';\r\n\r\nimport { startFetchingAllEvents } from '../../store/events/event.action';\r\nimport {selectLoadingState} from '../../store/events/event.selector';\r\n\r\n\r\n\r\n\r\n const CustumAccordion = ({getAllEvents, isLoading})=> {\r\n  useEffect(()=>{getAllEvents()},[getAllEvents])\r\n  return (\r\n    <div className='accordion-container'>\r\n      <Accordion>\r\n          <AccordionSummary expandIcon={<ExpandMoreIcon />}  aria-controls=\"panel1a-content\" id=\"panel1a-header\" >\r\n              <h2 className ='accordion-header'>ADD NEW EVENT</h2>\r\n          </AccordionSummary>\r\n          <AccordionDetails><AddNewEventForm/></AccordionDetails>\r\n      </Accordion>\r\n\r\n      <Accordion defaultExpanded={true}>\r\n          <AccordionSummary   expandIcon={<ExpandMoreIcon />} aria-controls=\"panel2a-content\" id=\"panel2a-header\" >\r\n              <h2 className ='accordion-header'>ALL EVENTS</h2>\r\n          </AccordionSummary>\r\n          <AccordionDetails>{isLoading? <Spinner/>: <EventContainer/>}</AccordionDetails>\r\n      </Accordion>\r\n    </div>\r\n  );\r\n}\r\nconst mapStateToProps = state =>{\r\n  return{\r\n    isLoading: selectLoadingState(state)\r\n  }\r\n}\r\nconst mapDispatchToProps =(dispatch)=>{\r\n  return{\r\n         getAllEvents: ()=> dispatch(startFetchingAllEvents())\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CustumAccordion); ","import './App.css';\nimport CustumAccordion from './components/accordion/accordion.component';\n\nfunction App() {\n  return (\n    <>\n    <CustumAccordion/>\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport {Provider} from 'react-redux'\n\nimport store from './store/store';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}